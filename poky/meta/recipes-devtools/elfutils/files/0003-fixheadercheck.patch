From 7e1f91c42ef5b0bf10afefec10dd08588df3ab1f Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Tue, 15 Aug 2017 17:17:20 +0800
Subject: [PATCH] fixheadercheck

For some binaries we can get a invalid section alignment, for example if
sh_align = 1 and sh_addralign is 0. In the case of a zero size section
like
".note.GNU-stack", this is irrelavent as far as I can tell and we
shouldn't
error in this case.

RP 2014/6/11

Upstream-Status: Pending

Rebase to 0.170
Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>

---
 libelf/elf32_updatenull.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/libelf/elf32_updatenull.c b/libelf/elf32_updatenull.c
index d0d4d1e..4ecf5a5 100644
--- a/libelf/elf32_updatenull.c
+++ b/libelf/elf32_updatenull.c
@@ -354,8 +354,8 @@ __elfw2(LIBELFBITS,updatenull_wrlock) (Elf *elf, int *change_bop, size_t shnum)
 		     we test for the alignment of the section being large
 		     enough for the largest alignment required by a data
 		     block.  */
-		  if (unlikely (! powerof2 (shdr->sh_addralign))
-		      || unlikely ((shdr->sh_addralign ?: 1) < sh_align))
+		  if (shdr->sh_size && (unlikely (! powerof2 (shdr->sh_addralign))
+		      || unlikely ((shdr->sh_addralign ?: 1) < sh_align)))
 		    {
 		      __libelf_seterrno (ELF_E_INVALID_ALIGN);
 		      return -1;
