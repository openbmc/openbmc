From aea5ffa9d704f4eb8fa93366884d3c26a1dbec49 Mon Sep 17 00:00:00 2001
From: Khem Raj <raj.khem@gmail.com>
Date: Fri, 29 Mar 2013 09:28:10 +0400
Subject: [PATCH 13/36] Disable sdt.

We don't list dtrace in DEPENDS so we shouldn't be depending on this header.
It may or may not exist from preivous builds though. To be determinstic, disable
sdt.h usage always. This avoids build failures if the header is removed after configure
but before libgcc is compiled for example.

RP 2012/8/7

Signed-off-by: Khem Raj <raj.khem@gmail.com>

Disable sdt for libstdc++-v3.

Signed-off-by: Robert Yang <liezhi.yang@windriver.com>

Upstream-Status: Inappropriate [hack]
---
 gcc/configure             | 12 ++++++------
 gcc/configure.ac          | 18 +++++++++---------
 libstdc++-v3/configure    |  6 +++---
 libstdc++-v3/configure.ac |  2 +-
 4 files changed, 19 insertions(+), 19 deletions(-)

diff --git a/gcc/configure b/gcc/configure
index e3bcf8abe9a..1f1d22ca666 100755
--- a/gcc/configure
+++ b/gcc/configure
@@ -29332,12 +29332,12 @@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking sys/sdt.h in the target C library" >&5
 $as_echo_n "checking sys/sdt.h in the target C library... " >&6; }
 have_sys_sdt_h=no
-if test -f $target_header_dir/sys/sdt.h; then
-  have_sys_sdt_h=yes
-
-$as_echo "#define HAVE_SYS_SDT_H 1" >>confdefs.h
-
-fi
+#if test -f $target_header_dir/sys/sdt.h; then
+#  have_sys_sdt_h=yes
+#
+#$as_echo "#define HAVE_SYS_SDT_H 1" >>confdefs.h
+#
+#fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $have_sys_sdt_h" >&5
 $as_echo "$have_sys_sdt_h" >&6; }
 
diff --git a/gcc/configure.ac b/gcc/configure.ac
index 2ebc377a74d..ddc85197588 100644
--- a/gcc/configure.ac
+++ b/gcc/configure.ac
@@ -5995,15 +5995,15 @@ fi
 AC_SUBST([enable_default_ssp])
 
 # Test for <sys/sdt.h> on the target.
-GCC_TARGET_TEMPLATE([HAVE_SYS_SDT_H])
-AC_MSG_CHECKING(sys/sdt.h in the target C library)
-have_sys_sdt_h=no
-if test -f $target_header_dir/sys/sdt.h; then
-  have_sys_sdt_h=yes
-  AC_DEFINE(HAVE_SYS_SDT_H, 1,
-            [Define if your target C library provides sys/sdt.h])
-fi
-AC_MSG_RESULT($have_sys_sdt_h)
+#GCC_TARGET_TEMPLATE([HAVE_SYS_SDT_H])
+#AC_MSG_CHECKING(sys/sdt.h in the target C library)
+#have_sys_sdt_h=no
+#if test -f $target_header_dir/sys/sdt.h; then
+#  have_sys_sdt_h=yes
+#  AC_DEFINE(HAVE_SYS_SDT_H, 1,
+#            [Define if your target C library provides sys/sdt.h])
+#fi
+#AC_MSG_RESULT($have_sys_sdt_h)
 
 # Check if TFmode long double should be used by default or not.
 # Some glibc targets used DFmode long double, but with glibc 2.4
diff --git a/libstdc++-v3/configure b/libstdc++-v3/configure
index 5acf79cba54..191bc6c5796 100755
--- a/libstdc++-v3/configure
+++ b/libstdc++-v3/configure
@@ -22085,11 +22085,11 @@ ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
 ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
 ac_compiler_gnu=$ac_cv_c_compiler_gnu
 
-  if test $glibcxx_cv_sys_sdt_h = yes; then
+#  if test $glibcxx_cv_sys_sdt_h = yes; then
 
-$as_echo "#define HAVE_SYS_SDT_H 1" >>confdefs.h
+#$as_echo "#define HAVE_SYS_SDT_H 1" >>confdefs.h
 
-  fi
+#  fi
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_sys_sdt_h" >&5
 $as_echo "$glibcxx_cv_sys_sdt_h" >&6; }
 
diff --git a/libstdc++-v3/configure.ac b/libstdc++-v3/configure.ac
index dadd8827b49..6b1ce9957d3 100644
--- a/libstdc++-v3/configure.ac
+++ b/libstdc++-v3/configure.ac
@@ -230,7 +230,7 @@ GLIBCXX_CHECK_SC_NPROCESSORS_ONLN
 GLIBCXX_CHECK_SC_NPROC_ONLN
 GLIBCXX_CHECK_PTHREADS_NUM_PROCESSORS_NP
 GLIBCXX_CHECK_SYSCTL_HW_NCPU
-GLIBCXX_CHECK_SDT_H
+#GLIBCXX_CHECK_SDT_H
 
 # Check for available headers.
 AC_CHECK_HEADERS([endian.h execinfo.h float.h fp.h ieeefp.h inttypes.h \
-- 
2.22.1

