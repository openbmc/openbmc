From 289eaf87f8de4d9ebfd661d4e4299c2952435243 Mon Sep 17 00:00:00 2001
From: Niko Tyni <ntyni@debian.org>
Date: Fri, 10 Apr 2015 10:19:51 +0300
Subject: Make t/run/locale.t survive missing locales masked by LC_ALL

If LC_ALL is set to a valid locale but another LC_* setting like LC_CTYPE
isn't, t/run/locale.t would fail because it explicitly unsets LC_ALL,
unmasking the problem underneath. All the other tests survive such
a scenario.

While this is clearly an error in the build environment, it's easy to make
the test more robust by first clearing all the locale relevant variables.

Bug: https://rt.perl.org/Ticket/Display.html?id=124310
Bug-Debian: https://bugs.debian.org/782068
Patch-Name: debian/locale-robustness.diff
---
 t/run/locale.t | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/t/run/locale.t b/t/run/locale.t
index bd1a034..2105339 100644
--- a/t/run/locale.t
+++ b/t/run/locale.t
@@ -27,6 +27,9 @@ my @locales = eval { find_locales( [ &LC_ALL, &LC_CTYPE, &LC_NUMERIC ],
                                  ) };
 skip_all("no locales available") unless @locales;
 
+# reset the locale environment
+local @ENV{'LANG', (grep /^LC_/, keys %ENV)};
+
 plan tests => &last;
 
 my $non_C_locale;
@@ -58,9 +61,6 @@ EOF
 SKIP: {
     skip("Windows stores locale defaults in the registry", 1 )
                                                             if $^O eq 'MSWin32';
-    local $ENV{LC_NUMERIC}; # So not taken as a default
-    local $ENV{LC_ALL}; # so it never overrides LC_NUMERIC
-    local $ENV{LANG};   # So not taken as a default
     fresh_perl_is("for (qw(@locales)) {\n" . <<'EOF',
         use POSIX qw(locale_h);
         use locale;
@@ -348,7 +348,6 @@ EOF
 
     {
 	local $ENV{LC_NUMERIC} = $different;
-	local $ENV{LC_ALL}; # so it never overrides LC_NUMERIC
 	fresh_perl_is(<<"EOF",
 	    use POSIX qw(locale_h);
 
