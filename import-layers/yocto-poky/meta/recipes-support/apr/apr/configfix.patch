Upstream-Status: Inappropriate [configuration]

Index: apr-1.3.3/apr-config.in
===================================================================
--- apr-1.3.3.orig/apr-config.in	2009-01-12 15:16:31.000000000 +0000
+++ apr-1.3.3/apr-config.in	2009-01-12 15:19:25.000000000 +0000
@@ -152,14 +152,7 @@
     flags="$flags $LDFLAGS"
     ;;
     --includes)
-    if test "$location" = "installed"; then
         flags="$flags -I$includedir $EXTRA_INCLUDES"
-    elif test "$location" = "source"; then
-        flags="$flags -I$APR_SOURCE_DIR/include $EXTRA_INCLUDES"
-    else
-        # this is for VPATH builds
-        flags="$flags -I$APR_BUILD_DIR/include -I$APR_SOURCE_DIR/include $EXTRA_INCLUDES"
-    fi
     ;;
     --srcdir)
     echo $APR_SOURCE_DIR
@@ -181,29 +167,14 @@
     exit 0
     ;;
     --link-ld)
-    if test "$location" = "installed"; then
-        ### avoid using -L if libdir is a "standard" location like /usr/lib
-        flags="$flags -L$libdir -l${APR_LIBNAME}"
-    else
-        ### this surely can't work since the library is in .libs?
-        flags="$flags -L$APR_BUILD_DIR -l${APR_LIBNAME}"
-    fi
+        flags="$flags -l${APR_LIBNAME}"
     ;;
     --link-libtool)
     # If the LA_FILE exists where we think it should be, use it.  If we're
     # installed and the LA_FILE does not exist, assume to use -L/-l
     # (the LA_FILE may not have been installed).  If we're building ourselves,
     # we'll assume that at some point the .la file be created.
-    if test -f "$LA_FILE"; then
-        flags="$flags $LA_FILE"
-    elif test "$location" = "installed"; then
-        ### avoid using -L if libdir is a "standard" location like /usr/lib
-        # Since the user is specifying they are linking with libtool, we
-        # *know* that -R will be recognized by libtool.
-        flags="$flags -L$libdir -R$libdir -l${APR_LIBNAME}"
-    else
-        flags="$flags $LA_FILE"
-    fi
+        flags="$flags -l${APR_LIBNAME}"
     ;;
     --shlib-path-var)
     echo "$SHLIBPATH_VAR"
