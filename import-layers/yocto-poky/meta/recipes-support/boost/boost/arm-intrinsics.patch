Upstream-Status: Backport

8/17/2010 - rebased to 1.44 by Qing He <qing.he@intel.com>

diff --git a/boost/smart_ptr/detail/atomic_count_sync.hpp b/boost/smart_ptr/detail/atomic_count_sync.hpp
index b6359b5..78b1cc2 100644
--- a/boost/smart_ptr/detail/atomic_count_sync.hpp
+++ b/boost/smart_ptr/detail/atomic_count_sync.hpp
@@ -33,17 +33,46 @@ public:
 
     long operator++()
     {
+#ifdef __ARM_ARCH_7A__
+       int v1, tmp;
+       asm volatile ("1:                 \n\t"
+                     "ldrex   %0, %1     \n\t"
+                     "add     %0 ,%0, #1 \n\t"
+                     "strex   %2, %0, %1 \n\t"
+                     "cmp     %2, #0     \n\t"
+                     "bne     1b         \n\t"
+                     : "=&r" (v1), "+Q"(value_), "=&r"(tmp)
+                    );
+#else
         return __sync_add_and_fetch( &value_, 1 );
+#endif
     }
 
     long operator--()
     {
+#ifdef __ARM_ARCH_7A__
+       int v1, tmp;
+       asm volatile ("1:                 \n\t"
+                     "ldrex   %0, %1     \n\t"
+                     "sub     %0 ,%0, #1 \n\t"
+                     "strex   %2, %0, %1 \n\t"
+                     "cmp     %2, #0     \n\t"
+                     "bne     1b         \n\t"
+                     : "=&r" (v1), "+Q"(value_), "=&r"(tmp)
+                    );
+       return value_;
+#else
         return __sync_add_and_fetch( &value_, -1 );
+#endif
     }
 
     operator long() const
     {
+#if __ARM_ARCH_7A__
+        return value_;
+#else
         return __sync_fetch_and_add( &value_, 0 );
+#endif
     }
 
 private:
