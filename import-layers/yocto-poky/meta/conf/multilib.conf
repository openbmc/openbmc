
baselib = "${@d.getVar('BASE_LIB_tune-' + (d.getVar('DEFAULTTUNE', True) or 'INVALID'), True) or d.getVar('BASELIB', True)}"

MULTILIB_VARIANTS = "${@extend_variants(d,'MULTILIBS','multilib')}"
MULTILIB_SAVE_VARNAME = "DEFAULTTUNE TARGET_ARCH TARGET_SYS TARGET_VENDOR"

MULTILIBS ??= "multilib:lib32"

STAGING_DIR_HOST = "${STAGING_DIR}/${MLPREFIX}${MACHINE}"
STAGING_DIR_TARGET = "${STAGING_DIR}/${MLPREFIX}${MACHINE}"
PKGDATA_DIR = "${STAGING_DIR}/${MACHINE}/pkgdata"

INHERIT += "multilib_global"

BBCLASSEXTEND_append = " ${MULTILIBS}"

MULTILIB_GLOBAL_VARIANTS ?= "lib32 lib64 libx32"

OPKG_ARGS_append = " --force-maintainer --force-overwrite"

# When multilib is enabled, allarch recipes will be installed into the MACHINE
# sysroot, not MLPREFIXMACHINE.  This means that anything using pkg-config to
# find an allarch pkgconfig file will fail as the PKG_CONFIG_PATH only looks
# inside the multilib sysroot.  Fix this by explicitly adding the MACHINE's
# architecture-independent pkgconfig location to PKG_CONFIG_PATH.
PKG_CONFIG_PATH .= ":${STAGING_DIR}/${MACHINE}${datadir}/pkgconfig"
PKG_CONFIG_PATH[vardepsexclude] = "MACHINE"
