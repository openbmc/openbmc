Fix link error with gcc 5 toolchains

 afc.c:258: error: undefined reference to 'debug_buffer'
 collect2: error: ld returned 1 exit status

debug.h header was declaring things inline without providing a definition.
Files that included this header then failed to link against the corresponding
external symbol in debug.c, because the linker took the 'inline' keyword
seriously rather than ignoring it.

--- libimobiledevice-1.1.4/src/debug.h.orig	2015-10-03 16:24:08.758740386 -0700
+++ libimobiledevice-1.1.4/src/debug.h	2015-10-03 16:24:22.706740355 -0700
@@ -44,14 +44,14 @@
 #define debug_plist(a)
 #endif
 
-LIBIMOBILEDEVICE_INTERNAL inline void debug_info_real(const char *func,
+LIBIMOBILEDEVICE_INTERNAL void debug_info_real(const char *func,
 											const char *file,
 											int	line,
 											const char *format, ...);
 
-LIBIMOBILEDEVICE_INTERNAL inline void debug_buffer(const char *data, const int length);
-LIBIMOBILEDEVICE_INTERNAL inline void debug_buffer_to_file(const char *file, const char *data, const int length);
-LIBIMOBILEDEVICE_INTERNAL inline void debug_plist_real(const char *func,
+LIBIMOBILEDEVICE_INTERNAL void debug_buffer(const char *data, const int length);
+LIBIMOBILEDEVICE_INTERNAL void debug_buffer_to_file(const char *file, const char *data, const int length);
+LIBIMOBILEDEVICE_INTERNAL void debug_plist_real(const char *func,
 											const char *file,
 											int	line,
 											plist_t plist);
