From 72e0fe484444169007e481c9b33d8f78ebe03674 Mon Sep 17 00:00:00 2001
From: Khem Raj <raj.khem@gmail.com>
Date: Thu, 27 May 2021 15:44:10 -0700
Subject: [PATCH] Fix build with libc++

In libc++ on 32-bit platforms, int64_t is defined as alias of long long. On 64-bit platforms: long.

On the other hand in definition of std::chrono::duration aliases, that you can find here long long is used

Therefore create custom unit to avoid incompatibility between libstdc++
and libc++

Upstream-Status: Pending

Signed-off-by: Khem Raj <raj.khem@gmail.com>
---
 extensions/expression-language/Expression.cpp | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/extensions/expression-language/Expression.cpp b/extensions/expression-language/Expression.cpp
index a25e1d3f..68d6320c 100644
--- a/extensions/expression-language/Expression.cpp
+++ b/extensions/expression-language/Expression.cpp
@@ -629,7 +629,8 @@ Value expr_toDate(const std::vector<Value> &args) {
 #endif  // EXPRESSION_LANGUAGE_USE_DATE
 
 Value expr_now(const std::vector<Value> &args) {
-  return Value(std::chrono::duration_cast<std::chrono::milliseconds>(std::chrono::system_clock::now().time_since_epoch()).count());
+  using Milliseconds = std::chrono::duration<std::int64_t, std::chrono::milliseconds::period>;
+  return Value(std::chrono::duration_cast<Milliseconds>(std::chrono::system_clock::now().time_since_epoch()).count());
 }
 
 Value expr_unescapeCsv(const std::vector<Value> &args) {
-- 
2.31.1

